Question no 1
see greeter.js

Question no 2
see age.js

Question no 3
The result is that foo is undefined. Because foo was assigned inside a block, not in the global scope where it was then attempted to be logged.

Question no 4
line no. 6 should produce an error because it it attempting to reassign the constant that was declared. Then the last three console.logs should all print with 'Victor' as the name again.

Question no 5
It should produce an error on line 3 because the variable foo was already declared in the global scope. The global scope reaches into the block, but not the other way around. 

Bummer, looks like I got this wrong. Maybe this is one of those "forgiving" instances of JavaScript. Ironically enough my first impulse was correct, but then I thought about block scope and thought that since 'let' was used with foo again it would error. I see that it just temporarily overrides the global foo.

Question no 6
Alright now here is where I think my previous thinking should hold. The const FOO has been declared on global, so block declaration should produce an error.

Bummer, wrong again... it looks like I need to work on understanding block scope a little better.


