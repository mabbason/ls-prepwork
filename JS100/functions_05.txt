Excercises - Functions
 
Excercise no 1
let sum = (num1, num2) => {
  return num1 + num2;
}
console.log(sum(22, 10));

Excercise no 2
function brendanEichQuote() {
  console.log('Always bet on JavaScript.');
}
The return value is undefined.

Excercise no 3
let cite = (author, quote) => {
  console.log(`${author} said: "${quote}"`);
}
cite('Brendan Eich', 'Always bet on JavaScript.');

Excercise no 4
function squaredNumber(num) {
  return num ** 2;
}

Excercise no 5
It won't log anything to the console because
multiplesOfThree; // isn't calling a function... it would be looking for the return value
and there is no return value so it is undefined.

Excercise no 6
function compareByLength(string1, string2) {
  if (string1.length < string2.length) {
    return -1;
  } else if (string1.length > string2.length) {
    return 1;
  } else {
    return 0;
  }
}

console.log(compareByLength('patience', 'perseverance')); // -1
console.log(compareByLength('strength', 'dignity'));      //  1
console.log(compareByLength('humor', 'grace'));           //  0

Excercise no 7
'Captain Ruby'.replace('Ruby', 'JavaScript');

Excercise no 8
function greet(countryCode) {
  switch(countryCode) {
    case 'fr':
      return 'Salut!';
    case 'pt':
      return 'Ola!';
    case 'de':
      return 'Hallo!';
    case 'sv':
      return 'Hej!';
    case 'af':
      return 'Haai!';
    default:
      return 'Hi!';
  }
}

console.log(greet('af'));

Excercise no 9
function extractLanguage(locale) {
 return locale.slice(0, 2);
}

Excercise no 10
function extractRegion(locale) {
 return locale.slice(3, 5);
}

Excercise no 11
function localGreet(locale) {
  switch(extractLanguage(locale)) {
    case 'fr':
      switch(extractRegion(locale)) {
        default:  return 'Salut!';
      }
    case 'pt':
      switch(extractRegion(locale)) {
        default:  return 'Ola!';
      }
    case 'de':
      switch(extractRegion(locale)) {
        default:  return 'Hallo!';
      }
    case 'sv':
      switch(extractRegion(locale)) {
        default:  return 'Hej!';
      }
    case 'af':
      switch(extractRegion(locale)) {
        default:  return 'Haai!';
      }
    case 'en':
      switch(extractRegion(locale)) {
        case 'US':  return 'Hey!';
        case 'GB':  return 'Hello!';
        case 'AU':  return 'Howdy!';
        default:
          console.log(locale);
          return 'Hi!';
      }
    default:
      return 'Please input a known locale code';
  }
}

function extractLanguage(locale) {
 return locale.slice(0, 2);
}

function extractRegion(locale) {
 return locale.slice(3, 5);
}

Wow, I was pretty far off base here. My code works, but it's no where near as 
effecient as the suggested solution. I was on the right track, but I did not 
keep in mind the idea of DO NOT REPEAT! I guess I was planning for possible 
other sub-regions, not just the English speaking... but still, my function planning
was not very clean.


